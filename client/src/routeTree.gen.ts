/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ProjectsProjectsIdImport } from './routes/projects/$projectsId'
import { Route as ProjectsProjectsImport } from './routes/projects/$projects'
import { Route as BacklogBacklogImport } from './routes/backlog/$backlog'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsProjectsIdRoute = ProjectsProjectsIdImport.update({
  id: '/projects/$projectsId',
  path: '/projects/$projectsId',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsProjectsRoute = ProjectsProjectsImport.update({
  id: '/projects/$projects',
  path: '/projects/$projects',
  getParentRoute: () => rootRoute,
} as any)

const BacklogBacklogRoute = BacklogBacklogImport.update({
  id: '/backlog/$backlog',
  path: '/backlog/$backlog',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/backlog/$backlog': {
      id: '/backlog/$backlog'
      path: '/backlog/$backlog'
      fullPath: '/backlog/$backlog'
      preLoaderRoute: typeof BacklogBacklogImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projects': {
      id: '/projects/$projects'
      path: '/projects/$projects'
      fullPath: '/projects/$projects'
      preLoaderRoute: typeof ProjectsProjectsImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectsId': {
      id: '/projects/$projectsId'
      path: '/projects/$projectsId'
      fullPath: '/projects/$projectsId'
      preLoaderRoute: typeof ProjectsProjectsIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/backlog/$backlog': typeof BacklogBacklogRoute
  '/projects/$projects': typeof ProjectsProjectsRoute
  '/projects/$projectsId': typeof ProjectsProjectsIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/backlog/$backlog': typeof BacklogBacklogRoute
  '/projects/$projects': typeof ProjectsProjectsRoute
  '/projects/$projectsId': typeof ProjectsProjectsIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/backlog/$backlog': typeof BacklogBacklogRoute
  '/projects/$projects': typeof ProjectsProjectsRoute
  '/projects/$projectsId': typeof ProjectsProjectsIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/backlog/$backlog'
    | '/projects/$projects'
    | '/projects/$projectsId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/backlog/$backlog'
    | '/projects/$projects'
    | '/projects/$projectsId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/backlog/$backlog'
    | '/projects/$projects'
    | '/projects/$projectsId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  BacklogBacklogRoute: typeof BacklogBacklogRoute
  ProjectsProjectsRoute: typeof ProjectsProjectsRoute
  ProjectsProjectsIdRoute: typeof ProjectsProjectsIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  BacklogBacklogRoute: BacklogBacklogRoute,
  ProjectsProjectsRoute: ProjectsProjectsRoute,
  ProjectsProjectsIdRoute: ProjectsProjectsIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/about",
        "/backlog/$backlog",
        "/projects/$projects",
        "/projects/$projectsId"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/about": {
      "filePath": "about.jsx"
    },
    "/backlog/$backlog": {
      "filePath": "backlog/$backlog.jsx"
    },
    "/projects/$projects": {
      "filePath": "projects/$projects.jsx"
    },
    "/projects/$projectsId": {
      "filePath": "projects/$projectsId.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
